[unix_http_server]
file=%(here)s/var/run/supervisor.sock
chmod=0700

[supervisord]
logfile = %(here)s/var/log/supervisord.log
logfile_maxbytes = 50MB
logfile_backups=10
loglevel = info
pidfile = %(here)s/var/run/supervisord.pid
nodaemon = False
minfds = 1024
minprocs = 200
umask = 022
identifier = supervisor
nocleanup = true
childlogdir = /tmp
environment = VIRTUAL_ENV="%(VIRTUAL_ENV)s",PATH="%(VIRTUAL_ENV)s/bin:%%(ENV_PATH)s"

[supervisorctl]
serverurl = unix:///%(here)s/var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[program:virtuoso]
directory = %(here)s/var/db
command = %(VIRTUOSO_ROOT)s/bin/virtuoso-t +foreground
autostart = %(autostart_virtuoso)s
autorestart = true
startsecs = 10
#Start virtuoso before other processes
priority = 100
stopsignal = INT

[program:celery_imap]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery worker -E -l info -A assembl.tasks.imap -n imap -c 1 -b %(IMAP_CELERY_BROKER)s -Q imap
autostart = %(autostart_celery_imap)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[program:source_reader]
directory = %(here)s
command = python assembl/tasks/source_reader.py %(CONFIG_FILE)s
autostart = %(autostart_source_reader)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
killasgroup = true

[program:celery_notification_dispatch]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery worker -E -l info -A assembl.tasks.notification_dispatch -n notification_dispatch -c 1 -b %(NOTIF_DISPATCH_CELERY_BROKER)s -Q notification_dispatch
autostart = %(autostart_celery_notification_dispatch)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[program:celery_notify]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery worker -E -l info -A assembl.tasks.notify -n notify -c 2 -b %(NOTIFY_CELERY_BROKER)s -Q notify
autostart = %(autostart_celery_notify)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[program:celery_notify_beat]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery -A assembl.tasks.notify beat -b %(NOTIFY_CELERY_BROKER)s
autostart = %(autostart_celery_notify_beat)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[program:celery_translate]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/celery worker -E -l info -A assembl.tasks.translate -n translate -c 2 -b %(NOTIFY_CELERY_BROKER)s -Q translate
autostart = %(autostart_celery_translate)s
autorestart = true
startsecs = 2
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[program:changes_router]
directory = %(here)s
command = python assembl/tasks/changes_router.py %(CONFIG_FILE)s
autostart = %(autostart_changes_router)s
autorestart = true
stopasgroup = false
stopwaitsecs = 60
#If the process didn't kill it's children after 60 seconds, it's unlikely to 
#ever reap them, so kill them all
killasgroup = true

[group:dev]
programs = pserve, nodesass, gulp

[group:prod]
programs = uwsgi

[program:pserve]
directory = %(here)s
command = %(VIRTUAL_ENV)s/bin/pserve --reload %(CONFIG_FILE)s
autostart = %(autostart_pserve)s
autorestart = false

[program:nodesass]
directory = %(here)s
command = ./node_modules/.bin/node-sass -w -r --include-path node_modules/bourbon/app/assets/stylesheets -o assembl/static/css assembl/static/css
autostart = %(autostart_nodesass)s
autorestart = true

[program:gulp]
directory = %(here)s/assembl
command = %(here)s/node_modules/gulp/bin/gulp.js
autostart = %(autostart_gulp)s
autorestart = true

[program:uwsgi]
directory = %(here)s
command=uwsgi --die-on-term --ini %(CONFIG_FILE)s
umask=002
autostart = %(autostart_uwsgi)s
autorestart = true
#user=www-data

[program:maintenance_uwsgi]
directory = %(here)s
command=uwsgi --die-on-term --ini maintenance.ini
umask=002
autostart = false
autorestart = true

[program:metrics]
directory = %(metrics_code_dir)s
command=%(metrics_cl)s -l %(metrics_code_dir)s/metrics-startup.lisp
autostart = %(autostart_metrics_server)s
autorestart = true

[program:metrics_py]
directory = %(metrics_code_dir)s
command= %(metrics_code_dir)s/startup.py
autostart = %(autostart_metrics_server)s
autorestart = true

[program:edgesense]
directory = %(edgesense_code_dir)s
command=%(edgesense_venv)s/bin/edgesense_catalyst_server
autostart = %(autostart_edgesense_server)s
autorestart = true
